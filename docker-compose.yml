version: "3.7"

services:

  app: &app
    container_name: app_service
    build:
      context: ./app
    restart: always
    env_file:
      - ./env/.env.dev
    volumes:
      - ./app/:/app/realestate_module
      - media_volume:/app/mediafiles
      - static_volume:/app/staticfiles
    ports:
      - 8000:8000
    command: python manage.py runserver_plus 0.0.0.0:8000
    depends_on:
      - db
      - rabbitmq
    networks:
      - realestate_network

  db:
    container_name: db_service
    image: postgres:12
    env_file:
      - ./env/.env.dev.db
    volumes:
      - postgresql_volume:/var/lib/postgresql/data
    networks:
      - realestate_network

  rabbitmq:
    container_name: rabbitmq_service
    image: rabbitmq:3.8
    volumes:
      - rabbit_volume:/var/lib/rabbitmq
    networks:
      - realestate_network

  celery_worker:
    <<: *app
    container_name: celery_worker
    command: celery worker --app=app.settings -E --loglevel=info
    ports: []
    networks:
      - realestate_network
    depends_on:
      - app
      - rabbitmq

volumes:
  postgresql_volume:
  rabbit_volume:
  media_volume:
  static_volume:

networks:
  realestate_network:
    driver: bridge
